/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.toedter.calendar.JCalendar;
import controller.ItemController;
import controller.PurchaseOrderController;
import controller.PurchaseOrderDetailController;
import controller.SupplierController;
import extra.Extra;
import java.awt.Dimension;
import static java.lang.Thread.sleep;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Item;
import model.PurchaseOrder;
import model.PurchaseOrderDetail;
import model.Supplier;

/**
 *
 * @author CM <2222cm@gmail.com>
 */
public class PurchaseOrderForm extends javax.swing.JDialog {
    
    private PurchaseOrderController purchaseOrderController;
    private PurchaseOrderDetailController purchaseOrderDetailController;
    private ItemController itemController;
    private SupplierController supplierController;
    private ArrayList<Supplier> suppliersList;
    private ArrayList<PurchaseOrder> ordersList;
    private ArrayList<PurchaseOrderDetail> orderDetailList;
    private ArrayList<Item> itemList;
    private DefaultTableModel orderTableModel, orderDetailTableModel;
    private String type = "supplierId", key, lastOrderID;
    private String[] supNamesArray;
    private final SimpleDateFormat dateFormat;
    private int mode = 0, selectedRow = -1;

    /**
     * Creates new form ViewOrderForm
     */
    public PurchaseOrderForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        
        setSuppliersCombo();
        setEditPanel(false);
        setDetailsPanel(false);
        setCalendar(addedDateText.getJCalendar());
        setCalendar(dueDateText.getJCalendar());
        
        ordersTable.getTableHeader().setReorderingAllowed(false);
        orderTableModel = (DefaultTableModel) ordersTable.getModel();
        orderDetailTableModel = (DefaultTableModel) orderDetailsTable.getModel();
        dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        viewAllButtonActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homeButton = new javax.swing.JButton();
        ordersPanel = new javax.swing.JPanel();
        searchActionPanel = new javax.swing.JPanel();
        viewAllButton = new javax.swing.JButton();
        searchByLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        searchCombo = new javax.swing.JComboBox();
        searchText = new javax.swing.JTextField();
        viewOrdersPanel = new javax.swing.JPanel();
        deleteOrderButton = new javax.swing.JButton();
        editOrderButton = new javax.swing.JButton();
        addOrderButton = new javax.swing.JButton();
        orderTablePane = new javax.swing.JScrollPane();
        ordersTable = new javax.swing.JTable();
        paymentButton = new javax.swing.JButton();
        editOrderPanel = new javax.swing.JPanel();
        jLabel03 = new javax.swing.JLabel();
        orderIDText = new javax.swing.JTextField();
        jLabel01 = new javax.swing.JLabel();
        jLabel02 = new javax.swing.JLabel();
        jLabel04 = new javax.swing.JLabel();
        suppliersCombo = new javax.swing.JComboBox();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        addedDateText = new com.toedter.calendar.JDateChooser();
        dueDateText = new com.toedter.calendar.JDateChooser();
        orderDetailsPanel = new javax.swing.JPanel();
        orderDetailTablePane = new javax.swing.JScrollPane();
        orderDetailsTable = new javax.swing.JTable();
        addItemButton = new javax.swing.JButton();
        deleteItemButton = new javax.swing.JButton();
        totalLabel = new javax.swing.JLabel();
        dueDateLabel = new javax.swing.JLabel();
        addedDateLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        supplierIDLabel = new javax.swing.JLabel();
        orderIDLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        editItemButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Purchase Orders");
        setResizable(false);

        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        ordersPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(100, 100, 100), 1, true));

        searchActionPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(200, 200, 200), 1, true));

        viewAllButton.setText("View All");
        viewAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllButtonActionPerformed(evt);
            }
        });

        searchByLabel.setText("Search by");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Supplier ID", "Order ID" }));
        searchCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchComboActionPerformed(evt);
            }
        });

        searchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchActionPanelLayout = new javax.swing.GroupLayout(searchActionPanel);
        searchActionPanel.setLayout(searchActionPanelLayout);
        searchActionPanelLayout.setHorizontalGroup(
            searchActionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchActionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchByLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        searchActionPanelLayout.setVerticalGroup(
            searchActionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchActionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchActionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByLabel)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewAllButton)
                    .addComponent(searchButton))
                .addContainerGap())
        );

        viewOrdersPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(150, 150, 150), 1, true));

        deleteOrderButton.setText("Delete");
        deleteOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOrderButtonActionPerformed(evt);
            }
        });

        editOrderButton.setText("Edit");
        editOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editOrderButtonActionPerformed(evt);
            }
        });

        addOrderButton.setText("Add");
        addOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderButtonActionPerformed(evt);
            }
        });

        orderTablePane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        ordersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Supplier", "Added Date", "Due Date", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ordersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordersTableMouseClicked(evt);
            }
        });
        orderTablePane.setViewportView(ordersTable);
        ordersTable.getColumnModel().getColumn(0).setMinWidth(70);
        ordersTable.getColumnModel().getColumn(0).setMaxWidth(70);
        ordersTable.getColumnModel().getColumn(1).setMinWidth(70);
        ordersTable.getColumnModel().getColumn(1).setMaxWidth(70);
        ordersTable.getColumnModel().getColumn(2).setMinWidth(100);
        ordersTable.getColumnModel().getColumn(2).setMaxWidth(100);
        ordersTable.getColumnModel().getColumn(3).setMinWidth(100);
        ordersTable.getColumnModel().getColumn(3).setMaxWidth(100);
        ordersTable.getColumnModel().getColumn(4).setMinWidth(90);
        ordersTable.getColumnModel().getColumn(4).setMaxWidth(90);

        paymentButton.setText("Payments");
        paymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewOrdersPanelLayout = new javax.swing.GroupLayout(viewOrdersPanel);
        viewOrdersPanel.setLayout(viewOrdersPanelLayout);
        viewOrdersPanelLayout.setHorizontalGroup(
            viewOrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewOrdersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewOrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(viewOrdersPanelLayout.createSequentialGroup()
                        .addComponent(paymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(addOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        viewOrdersPanelLayout.setVerticalGroup(
            viewOrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewOrdersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(orderTablePane, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(viewOrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteOrderButton)
                    .addComponent(addOrderButton)
                    .addComponent(editOrderButton)
                    .addComponent(paymentButton))
                .addContainerGap())
        );

        editOrderPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(200, 200, 200), 1, true));

        jLabel03.setText("Added date");

        orderIDText.setEditable(false);
        orderIDText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderIDTextActionPerformed(evt);
            }
        });

        jLabel01.setText("Order ID");

        jLabel02.setText("Supplier");

        jLabel04.setText("Due date");

        suppliersCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliersComboActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        saveButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                saveButtonKeyTyped(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addedDateText.setDateFormatString("yyyy-MM-dd");
        addedDateText.setIcon(new ImageIcon("./src/icons/calendar-icon.png"));
        addedDateText.setMaximumSize(new java.awt.Dimension(2147483, 2147483));
        addedDateText.setMinSelectableDate(new java.util.Date(-62135785703000L));

        dueDateText.setDateFormatString("yyyy-MM-dd");
        dueDateText.setIcon(new ImageIcon("./src/icons/calendar-icon.png"));
        dueDateText.setMaximumSize(new java.awt.Dimension(2147483, 2147483));
        dueDateText.setMinSelectableDate(new java.util.Date(-62135785703000L));

        javax.swing.GroupLayout editOrderPanelLayout = new javax.swing.GroupLayout(editOrderPanel);
        editOrderPanel.setLayout(editOrderPanelLayout);
        editOrderPanelLayout.setHorizontalGroup(
            editOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editOrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editOrderPanelLayout.createSequentialGroup()
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editOrderPanelLayout.createSequentialGroup()
                        .addGroup(editOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel03, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(jLabel04, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel02, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addedDateText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(suppliersCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(orderIDText)
                            .addComponent(dueDateText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        editOrderPanelLayout.setVerticalGroup(
            editOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editOrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel01)
                    .addComponent(orderIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel02)
                    .addComponent(suppliersCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addedDateText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel03, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dueDateText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel04, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(editOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout ordersPanelLayout = new javax.swing.GroupLayout(ordersPanel);
        ordersPanel.setLayout(ordersPanelLayout);
        ordersPanelLayout.setHorizontalGroup(
            ordersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ordersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchActionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(ordersPanelLayout.createSequentialGroup()
                        .addComponent(viewOrdersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editOrderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ordersPanelLayout.setVerticalGroup(
            ordersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchActionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ordersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editOrderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewOrdersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        orderDetailsPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(150, 150, 150), 1, true));

        orderDetailTablePane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        orderDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Description", "Qty", "Unit Price", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderDetailsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        orderDetailTablePane.setViewportView(orderDetailsTable);
        orderDetailsTable.getColumnModel().getColumn(0).setMinWidth(50);
        orderDetailsTable.getColumnModel().getColumn(0).setMaxWidth(50);
        orderDetailsTable.getColumnModel().getColumn(2).setMinWidth(50);
        orderDetailsTable.getColumnModel().getColumn(2).setMaxWidth(50);
        orderDetailsTable.getColumnModel().getColumn(3).setMinWidth(80);
        orderDetailsTable.getColumnModel().getColumn(3).setMaxWidth(80);
        orderDetailsTable.getColumnModel().getColumn(4).setMinWidth(80);
        orderDetailsTable.getColumnModel().getColumn(4).setMaxWidth(80);

        addItemButton.setText("Add");
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });

        deleteItemButton.setText("Delete");
        deleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemButtonActionPerformed(evt);
            }
        });

        totalLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        totalLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totalLabel.setText(" ");

        dueDateLabel.setText(" ");

        jLabel3.setText("Added Date");

        jLabel4.setText("Due Date");

        jLabel1.setText("Order ID");

        jLabel2.setText("Supplier");

        editItemButton.setText("Edit");
        editItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel5.setText("Total :");

        javax.swing.GroupLayout orderDetailsPanelLayout = new javax.swing.GroupLayout(orderDetailsPanel);
        orderDetailsPanel.setLayout(orderDetailsPanelLayout);
        orderDetailsPanelLayout.setHorizontalGroup(
            orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderDetailTablePane)
                    .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                        .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(orderIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(supplierIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addedDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dueDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderDetailsPanelLayout.createSequentialGroup()
                        .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        orderDetailsPanelLayout.setVerticalGroup(
            orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(addedDateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(orderIDLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(dueDateLabel))
                    .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(supplierIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(orderDetailTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addItemButton)
                            .addComponent(deleteItemButton)
                            .addComponent(editItemButton)))
                    .addComponent(totalLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        infoLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        infoLabel.setText(" ");
        infoLabel.setPreferredSize(new java.awt.Dimension(400, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(orderDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ordersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ordersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homeButton)
                    .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editOrderButtonActionPerformed
        clearAndSet(false);
        int row = ordersTable.getSelectedRow();
        if (row != -1) {
            mode = 2;
            setEditPanel(true);
        } else {
            displayMessage("Select an order first");
        }
    }//GEN-LAST:event_editOrderButtonActionPerformed
    
    private void searchComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchComboActionPerformed
        int index = searchCombo.getSelectedIndex();
        if (index == 0) {
            type = "supplierId";
        } else if (index == 1) {
            type = "id";
        }
    }//GEN-LAST:event_searchComboActionPerformed
    
    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_homeButtonActionPerformed
    
    private void deleteOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOrderButtonActionPerformed
        clearAndSet(false);
        int row = ordersTable.getSelectedRow();
        if (row != -1) {
            int conf = JOptionPane.showConfirmDialog(viewOrdersPanel, "Delete selected record?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (conf == 0) {
                //
                viewAllButtonActionPerformed(null);
            }
        } else {
            displayMessage("Select an order first");
        }
    }//GEN-LAST:event_deleteOrderButtonActionPerformed
    
    private void ordersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordersTableMouseClicked
        int clicks = evt.getClickCount();
        if (clicks == 1) {
            clearAndSet(false);
            selectedRow = ordersTable.getSelectedRow();
        } else if (clicks == 2) {
            setDetailsPanel(true);
            setOrderDetails();
        }
    }//GEN-LAST:event_ordersTableMouseClicked
    
    private void addOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderButtonActionPerformed
        mode = 1;
        clearAndSet(false);
        viewAllButtonActionPerformed(null);
        setEditPanel(true);
        orderIDText.setText(new Extra().getNextID(lastOrderID));
    }//GEN-LAST:event_addOrderButtonActionPerformed
    
    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed
        clearAndSet(false);
        key = searchText.getText();
        if (!key.equals("")) {
            searchOrders();
        } else {
            viewAllButtonActionPerformed(null);
        }
    }//GEN-LAST:event_searchTextActionPerformed
    
    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed
        //
    }//GEN-LAST:event_addItemButtonActionPerformed
    
    private void deleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemButtonActionPerformed
        //
    }//GEN-LAST:event_deleteItemButtonActionPerformed
    
    private void viewAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllButtonActionPerformed
        clearAndSet(false);
        searchText.setText("");
        searchCombo.setSelectedIndex(0);
        setOrdersTable();
    }//GEN-LAST:event_viewAllButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        //
    }//GEN-LAST:event_saveButtonActionPerformed
    
    private void suppliersComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliersComboActionPerformed
    }//GEN-LAST:event_suppliersComboActionPerformed
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchTextActionPerformed(null);
    }//GEN-LAST:event_searchButtonActionPerformed
    
    private void orderIDTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderIDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderIDTextActionPerformed
    
    private void paymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentButtonActionPerformed
        clearAndSet(false);
    }//GEN-LAST:event_paymentButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        clearAndSet(false);
        mode = 0;
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    private void saveButtonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saveButtonKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c))) {
            evt.consume();
        }
    }//GEN-LAST:event_saveButtonKeyTyped
    
    private void editItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemButtonActionPerformed
        //
    }//GEN-LAST:event_editItemButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PurchaseOrderForm dialog = new PurchaseOrderForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JButton addOrderButton;
    private javax.swing.JLabel addedDateLabel;
    private com.toedter.calendar.JDateChooser addedDateText;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteItemButton;
    private javax.swing.JButton deleteOrderButton;
    private javax.swing.JLabel dueDateLabel;
    private com.toedter.calendar.JDateChooser dueDateText;
    private javax.swing.JButton editItemButton;
    private javax.swing.JButton editOrderButton;
    private javax.swing.JPanel editOrderPanel;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel jLabel01;
    private javax.swing.JLabel jLabel02;
    private javax.swing.JLabel jLabel03;
    private javax.swing.JLabel jLabel04;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane orderDetailTablePane;
    private javax.swing.JPanel orderDetailsPanel;
    private javax.swing.JTable orderDetailsTable;
    private javax.swing.JLabel orderIDLabel;
    private javax.swing.JTextField orderIDText;
    private javax.swing.JScrollPane orderTablePane;
    private javax.swing.JPanel ordersPanel;
    private javax.swing.JTable ordersTable;
    private javax.swing.JButton paymentButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JPanel searchActionPanel;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchByLabel;
    private javax.swing.JComboBox searchCombo;
    private javax.swing.JTextField searchText;
    private javax.swing.JLabel supplierIDLabel;
    private javax.swing.JComboBox suppliersCombo;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JButton viewAllButton;
    private javax.swing.JPanel viewOrdersPanel;
    // End of variables declaration//GEN-END:variables

    private void displayMessage(String message) {
        final String msg = message;
        
        new Thread() {
            public void run() {
                infoLabel.setText("");
                try {
                    sleep(50);
                } catch (InterruptedException ex) {
                    Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                infoLabel.setText(msg);
                try {
                    sleep(50);
                } catch (InterruptedException ex) {
                    Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                infoLabel.setText("");
                try {
                    sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                infoLabel.setText(msg);
                
                try {
                    sleep(5000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                infoLabel.setText("");
            }
        }.start();
    }
    
    private void setCalendar(JCalendar calendar) {
        Dimension size = new Dimension(250, 170);
        calendar.setPreferredSize(size);
        calendar.setWeekOfYearVisible(false);
        calendar.setTodayButtonVisible(true);
    }
    
    private void setSuppliersCombo() {
        supplierController = new SupplierController();
        
        try {
            suppliersList = supplierController.getAllSuppliers();
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        supNamesArray = new String[suppliersList.size()];
        
        for (int i = 0; i < suppliersList.size(); i++) {
            Supplier s = suppliersList.get(i);
            supNamesArray[i] = s.getId() + "   " + s.getName();
        }
        
        suppliersCombo.setModel(new DefaultComboBoxModel(supNamesArray));
    }
    
    private void setEditPanel(boolean b) {
        jLabel01.setEnabled(b);
        jLabel02.setEnabled(b);
        jLabel03.setEnabled(b);
        jLabel04.setEnabled(b);
        orderIDText.setEnabled(b);
        suppliersCombo.setEnabled(b);
        addedDateText.setEnabled(b);
        dueDateText.setEnabled(b);
        saveButton.setEnabled(b);
        cancelButton.setEnabled(b);
    }
    
    private void setDetailsPanel(boolean b) {
        jLabel1.setEnabled(b);
        jLabel2.setEnabled(b);
        jLabel3.setEnabled(b);
        jLabel4.setEnabled(b);
        jLabel5.setEnabled(b);
        totalLabel.setEnabled(b);
        addItemButton.setEnabled(b);
        editItemButton.setEnabled(b);
        deleteItemButton.setEnabled(b);
    }
    
    private void clearEditPanel() {
        orderIDText.setText("");
        suppliersCombo.setSelectedIndex(0);
        addedDateText.setDate(null);
        dueDateText.setDate(null);
    }
    
    private void clearDetailsPanel() {
        orderIDLabel.setText("");
        supplierIDLabel.setText("");
        addedDateLabel.setText("");
        dueDateLabel.setText("");
        totalLabel.setText("");
        orderDetailTableModel.setRowCount(0);
    }
    
    private void clearAndSet(boolean b) {
        clearEditPanel();
        clearDetailsPanel();
        setEditPanel(b);
        setDetailsPanel(b);
    }
    
    private void setOrdersTable() {
        orderTableModel.setRowCount(0);
        purchaseOrderController = new PurchaseOrderController();
        
        try {
            ordersList = purchaseOrderController.getAllOrders();
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for (int i = 0; i < ordersList.size(); i++) {
            PurchaseOrder o = ordersList.get(i);
            Object[] row = {o.getId(), o.getSupplierId(), o.getAddedDate(), o.getDueDate(), o.getAmount()};
            orderTableModel.addRow(row);
            lastOrderID = o.getId();
        }
    }
    
    private void searchOrders() {
        orderTableModel.setRowCount(0);
        purchaseOrderController = new PurchaseOrderController();
        
        try {
            ordersList = purchaseOrderController.searchOrder(key, type);
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for (int i = 0; i < ordersList.size(); i++) {
            PurchaseOrder o = ordersList.get(i);
            Object[] row = {o.getId(), o.getSupplierId(), o.getAddedDate(), o.getDueDate(), o.getAmount()};
            orderTableModel.addRow(row);
        }
    }
    
    private void setOrderDetails() {
        double total = 0;
        orderDetailTableModel.setRowCount(0);
        String id = (String) ordersTable.getValueAt(selectedRow, 0);
        purchaseOrderDetailController = new PurchaseOrderDetailController();
        itemController = new ItemController();
        
        orderIDLabel.setText(id);
        supplierIDLabel.setText((String) ordersTable.getValueAt(selectedRow, 1));
        addedDateLabel.setText((String) ordersTable.getValueAt(selectedRow, 2));
        dueDateLabel.setText((String) ordersTable.getValueAt(selectedRow, 3));
        
        try {
            orderDetailList = purchaseOrderDetailController.getAllOrderDetails(id);
        } catch (SQLException ex) {
            Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for (int i = 0; i < orderDetailList.size(); i++) {
            String desc = null;
            double amount = 0;
            PurchaseOrderDetail od = orderDetailList.get(i);
            
            try {
                itemList = itemController.searchItem(od.getItemCode(), "code");
                Item it = itemList.get(0);
                desc = it.getDescription();
            } catch (SQLException ex) {
                Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PurchaseOrderForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            amount = od.getQty() * od.getUnitPrice();
            total += amount;
            Object[] row = {od.getItemCode(), desc, od.getQty(), od.getUnitPrice(), amount};
            orderDetailTableModel.addRow(row);
        }
        totalLabel.setText(String.format("%.2f", total));
    }
}