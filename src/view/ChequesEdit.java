/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.toedter.calendar.JCalendar;
import controller.RecievedChequeController;
import controller.CustomerPaymentController;
import extra.Extra;
import java.awt.Dimension;
import static java.lang.Thread.sleep;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import model.Cheque;
import model.Payment;

/**
 *
 * @author CM <2222cm@gmail.com>
 */
public class ChequesEdit extends javax.swing.JDialog {

    private RecievedChequeController chequeController;
    private String orderID, chequeID;
    private int mode;
    private double amount;
    private final SimpleDateFormat dateFormat;
    private boolean numberFlag, bankFlag, issuedDateFlag, realDateFlag;
    private CustomerPaymentController paymentController;
    private Payment payment;

    /**
     * Creates new form ChequeForm
     */
    public ChequesEdit(java.awt.Frame parent, boolean modal, Payment payment, int mode) {
        super(parent, modal);
        this.orderID = payment.getOrderId();
        this.amount = payment.getPayment();
        this.chequeID = payment.getChequeID();
        this.payment = payment;
        this.mode = mode;

        initComponents();
        setLocationRelativeTo(null);

        dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        setCalendar(issuedDateText.getJCalendar());
        setCalendar(realDateText.getJCalendar());

        setDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveButton = new javax.swing.JButton();
        topPanel = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        orderIDLabel = new javax.swing.JLabel();
        amountLabel = new javax.swing.JLabel();
        fieldsPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        issuedDateText = new com.toedter.calendar.JDateChooser();
        realDateText = new com.toedter.calendar.JDateChooser();
        numberText = new javax.swing.JTextField();
        bankText = new javax.swing.JTextField();
        infoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Cheque");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        topPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(200, 200, 200), 1, true));

        idLabel.setText("Cheque ID");

        jLabel1.setText("Cheque ID");

        jLabel7.setText("Amount");

        jLabel2.setText("Order ID");

        orderIDLabel.setText("Order ID");

        amountLabel.setText("Amount");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(amountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(orderIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(orderIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(amountLabel))
                .addContainerGap())
        );

        fieldsPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(200, 200, 200), 1, true));

        jLabel5.setText("Issued Date");

        jLabel4.setText("Bank");

        jLabel6.setText("Realisation Date");

        jLabel3.setText("Number");

        issuedDateText.setDateFormatString("yyyy-MM-dd");
        issuedDateText.setIcon(new ImageIcon("./src/icons/calendar-icon.png"));

        realDateText.setDateFormatString("yyyy-MM-dd");
        realDateText.setIcon(new ImageIcon("./src/icons/calendar-icon.png"));

        numberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberTextActionPerformed(evt);
            }
        });

        bankText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fieldsPanelLayout = new javax.swing.GroupLayout(fieldsPanel);
        fieldsPanel.setLayout(fieldsPanelLayout);
        fieldsPanelLayout.setHorizontalGroup(
            fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(issuedDateText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(realDateText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bankText)
                    .addComponent(numberText, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        fieldsPanelLayout.setVerticalGroup(
            fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(numberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(bankText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(issuedDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(realDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        infoLabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        infoLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fieldsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(infoLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numberTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberTextActionPerformed
        bankText.requestFocus();
    }//GEN-LAST:event_numberTextActionPerformed

    private void bankTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankTextActionPerformed
        saveButton.requestFocus();
    }//GEN-LAST:event_bankTextActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        Cheque c = setCheque();

        if (!numberFlag) {
            displayMessage("Enter cheque number");
        } else if (!bankFlag) {
            displayMessage("Enter bank");
        } else if (!issuedDateFlag) {
            displayMessage("Enter issued date");
        } else if (!realDateFlag) {
            displayMessage("Enter realization date");
        } else {
            payment.setChequeID(c.getId());

            paymentController = new CustomerPaymentController();
            chequeController = new RecievedChequeController();

            if (mode == 1) {
                boolean paymentAdded = false, chequeAdded = false;

                try {
                    paymentAdded = paymentController.addPayment(payment);
                    chequeAdded = chequeController.addCheque(c);
                } catch (SQLException ex) {
                    Logger.getLogger(ChequesEdit.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ChequesEdit.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (chequeAdded) {
                    dispose();
                } else {
                    displayMessage("Cheque was not added");
                }
            } else if (mode == 2) {
                boolean paymentUpdated = false, chequeUpdated = false;
                try {
                    chequeUpdated = chequeController.updateCheque(c);
                    paymentUpdated = paymentController.updatePayment(payment);
                } catch (SQLException ex) {
                    Logger.getLogger(ChequesEdit.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ChequesEdit.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (chequeUpdated) {
                    dispose();
                } else {
                    displayMessage("Cheque was not updated");
                }
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChequesEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChequesEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChequesEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChequesEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountLabel;
    private javax.swing.JTextField bankText;
    private javax.swing.JPanel fieldsPanel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel infoLabel;
    private com.toedter.calendar.JDateChooser issuedDateText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField numberText;
    private javax.swing.JLabel orderIDLabel;
    private com.toedter.calendar.JDateChooser realDateText;
    private javax.swing.JButton saveButton;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables

    private void setCalendar(JCalendar calendar) {
        Dimension size = new Dimension(250, 170);
        calendar.setPreferredSize(size);
        calendar.setWeekOfYearVisible(false);
        calendar.setTodayButtonVisible(true);
    }

    private void displayMessage(String message) {
        final String msg = message;

        new Thread() {
            public void run() {
                infoLabel.setText("");
                try {
                    sleep(50);
                } catch (InterruptedException ex) {
                    //
                }

                infoLabel.setText(msg);
                try {
                    sleep(50);
                } catch (InterruptedException ex) {
                    //
                }
                infoLabel.setText("");
                try {
                    sleep(100);
                } catch (InterruptedException ex) {
                    //
                }

                infoLabel.setText(msg);

                try {
                    sleep(5000);
                } catch (InterruptedException ex) {
                    //
                }

                infoLabel.setText("");
            }
        }.start();
    }

    private void setDetails() {
        String lastID = null, nextID = null;
        if (mode == 1) {
            chequeController = new RecievedChequeController();

            try {
                lastID = chequeController.getLastID();
            } catch (SQLException ex) {
                Logger.getLogger(ChequesEdit.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ChequesEdit.class.getName()).log(Level.SEVERE, null, ex);
            }

            nextID = new Extra().getNextID(lastID);
        } else if (mode == 2) {
            nextID = payment.getChequeID();
            setFields(nextID);
        }
        idLabel.setText(nextID);
        orderIDLabel.setText(orderID);
        amountLabel.setText(amount + "");
    }

    private void setDetails(Cheque cheque) {
        String iDate, rDate;

        idLabel.setText(cheque.getId());
        orderIDLabel.setText(cheque.getOrderId());
        amountLabel.setText(cheque.getAmount() + "");
        numberText.setText(cheque.getNumber());
        bankText.setText(cheque.getBank());
        iDate = cheque.getIssuedDate();
        rDate = cheque.getRealDate();
        try {
            issuedDateText.setDate(dateFormat.parse(iDate));
            realDateText.setDate(dateFormat.parse(rDate));
        } catch (ParseException ex) {
        }
    }

    private Cheque setCheque() {
        String id, number, bank, issuedDate = null, realDate = null;
        Date iDate, rDate;

        id = idLabel.getText();
        number = numberText.getText();
        if (!number.equals("")) {
            numberFlag = true;
        }
        bank = bankText.getText();
        if (!bank.equals("")) {
            bankFlag = true;
        }
        iDate = issuedDateText.getDate();
        if (iDate != null) {
            issuedDateFlag = true;
            issuedDate = dateFormat.format(iDate);
        }
        rDate = realDateText.getDate();
        if (rDate != null) {
            realDateFlag = true;
            realDate = dateFormat.format(rDate);
        }

        Cheque c = new Cheque(id, orderID, number, bank, issuedDate, realDate, amount);

        return c;
    }

    private void setFields(String id) {
        ArrayList<Cheque> chequesList = null;
        String iDate, rDate;

        chequeController = new RecievedChequeController();

        try {
            chequesList = chequeController.searchCheques(id, "id");
        } catch (SQLException ex) {
            Logger.getLogger(ChequesEdit.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ChequesEdit.class.getName()).log(Level.SEVERE, null, ex);
        }

        Cheque ch = chequesList.get(0);

        numberText.setText(ch.getNumber());
        bankText.setText(ch.getBank());
        iDate = ch.getIssuedDate();
        rDate = ch.getRealDate();
        try {
            issuedDateText.setDate(dateFormat.parse(iDate));
            realDateText.setDate(dateFormat.parse(rDate));
        } catch (ParseException ex) {
            Logger.getLogger(ChequesEdit.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
